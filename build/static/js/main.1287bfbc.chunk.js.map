{"version":3,"sources":["assets/images/whatsapp.svg","serviceWorker.js","app/home/duck/types.js","app/home/duck/actions.js","app/home/duck/operations.js","app/common/index.js","app/product/duck/types.js","app/product/duck/actions.js","app/home/components/Header.jsx","app/home/components/Spotlight.jsx","app/home/components/HomeProducts.jsx","app/home/components/Tags.jsx","app/home/HomeContainer.js","app/product/ProductDetail.jsx","app/product/ProductContainer.js","app/App.js","app/common/reducers/auth.js","app/home/duck/reducers.js","app/product/duck/reducers.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","setTag","tag","type","types","fetchStoreDetails","dispatch","fetch","process","response","status","Error","json","action","tags","slug","errorMsg","message","fetchStoreSpotlight","fetchProductsRequest","fetchProductsSuccess","fetchProductsFailed","fetchProducts","productId","endpoint","Header","style","background","this","props","backgroundColor","className","to","src","logo","alt","Component","Spotlight","image","Spotlights","spotlights","map","spotlight","index","key","Product","product","name","color","priceColor","price","ProductList","products","Object","values","filter","prod","selectedTag","id","Tag","buttonColor","tagClassName","buttonBG","activeTag","href","onClick","e","preventDefault","TagFilter","HomeContainer","store","isFetching","data","images","spotlightRender","productRender","helmetRender","headerRender","tagBarRender","Helmet","rel","favicon","themeColor","items","connect","ProductDetail","whatsappLogo","ProductContainer","productSlug","productIsFetching","ownProps","params","App","Fragment","history","exact","path","component","initialState","isAuthenticated","storeInitialState","undefined","spotlightInitialState","createBrowserHistory","rootReducer","combineReducers","auth","assign","newProducts","reduce","result","item","newItems","email","theme_color","accent_color","router","connectRouter","middleware","thunkMiddleware","routerMiddleware","createStore","applyMiddleware","render","document","getElementById","URL","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1287bfbc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whatsapp.d89731b4.svg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const FETCH_STORE_DETAIL_REQUEST = 'FETCH_STORE_DETAIL_REQUEST';\nconst FETCH_STORE_DETAIL_SUCCESS = 'FETCH_STORE_DETAIL_SUCCESS';\nconst FETCH_STORE_DETAIL_FAILED = 'FETCH_STORE_DETAIL_FAILED';\n\nconst FETCH_STORE_SPOTLIGHT_REQUEST = 'FETCH_STORE_SPOTLIGHT_REQUEST';\nconst FETCH_STORE_SPOTLIGHT_SUCCESS = 'FETCH_STORE_SPOTLIGHT_SUCCESS';\nconst FETCH_STORE_SPOTLIGHT_FAILED = 'FETCH_STORE_SPOTLIGHT_FAILED';\n\nconst SET_TAG = 'SET_TAG';\n\nexport default {\n    FETCH_STORE_DETAIL_REQUEST,\n    FETCH_STORE_DETAIL_SUCCESS,\n    FETCH_STORE_DETAIL_FAILED,\n    SET_TAG,\n    FETCH_STORE_SPOTLIGHT_REQUEST,\n    FETCH_STORE_SPOTLIGHT_SUCCESS,\n    FETCH_STORE_SPOTLIGHT_FAILED\n}","import types from './types';\n\nexport function fetchStoreDetailRequest() {\n  return {\n    type: types.FETCH_STORE_DETAIL_REQUEST\n  }\n}\n\nexport function fetchStoreDetailSuccess(json) {\n  return {\n    type: types.FETCH_STORE_DETAIL_SUCCESS,\n    json\n  }\n}\n\nexport function fetchStoreDetailFailed(errorMsg) {\n  return {\n    type: types.FETCH_STORE_DETAIL_FAILED,\n    errorMsg\n  }\n}\n\nexport function fetchStoreSpotlightRequest() {\n  return {\n    type: types.FETCH_STORE_SPOTLIGHT_REQUEST\n  }\n}\n\nexport function fetchStoreSpotlightSuccess(json) {\n  return {\n    type: types.FETCH_STORE_SPOTLIGHT_SUCCESS,\n    json\n  }\n}\n\nexport function fetchStoreSpotlightFailed(errorMsg) {\n  return {\n    type: types.FETCH_STORE_SPOTLIGHT_FAILED,\n    errorMsg\n  }\n}\n\nexport function setTag(tag) {\n  return {\n    type: types.SET_TAG,\n    tag\n  }\n}\n","import fetch from 'cross-fetch'\nimport * as action from './actions'\nimport { BACKEND_API_ENDPOINT } from '../../common'\n\n\nexport function fetchStoreDetails() {\n    return function(dispatch) {\n      dispatch(action.fetchStoreDetailRequest())\n      return fetch(`${BACKEND_API_ENDPOINT}/`)\n          .then(response => {\n            if(response.status >= 400) {\n              throw new Error(\"Error fetching store details. Please try again later.\")\n            }\n            return response.json()\n          })\n          .then(json => {\n            dispatch(action.fetchStoreDetailSuccess(json))\n            dispatch(action.setTag(json.tags[0].slug))\n          })\n          .catch(error => dispatch(action.fetchStoreDetailFailed(error.message)))\n    }\n}\n\nexport function fetchStoreSpotlight() {\n    return function(dispatch) {\n      dispatch(action.fetchStoreSpotlightRequest())\n      return fetch(`${BACKEND_API_ENDPOINT}/spotlights/`)\n          .then(response => {\n            if(response.status >= 400) {\n              throw new Error(\"Error fetching store details. Please try again later.\")\n            }\n            return response.json()\n          })\n          .then(json => dispatch(action.fetchStoreSpotlightSuccess(json)))\n          .catch(error => dispatch(action.fetchStoreSpotlightFailed(error.message)))\n    }\n}","export const BACKEND_API_ENDPOINT = process.env.REACT_APP_INSTORE_API_ENDPOINT","const FETCH_PRODUCTS_REQUEST = 'FETCH_PRODUCTS_REQUEST';\nconst FETCH_PRODUCTS_SUCCESS = 'FETCH_PRODUCTS_SUCCESS';\nconst FETCH_PRODUCTS_FAILED = 'FETCH_PRODUCTS_FAILED';\n\nexport default {\n    FETCH_PRODUCTS_REQUEST,\n    FETCH_PRODUCTS_SUCCESS,\n    FETCH_PRODUCTS_FAILED,\n}","import fetch from 'cross-fetch'\nimport types from './types';\n\nimport { BACKEND_API_ENDPOINT } from '../../common'\n\n\nexport function fetchProductsRequest() {\n  return {\n    type: types.FETCH_PRODUCTS_REQUEST\n  }\n}\n\nexport function fetchProductsSuccess(json) {\n  return {\n    type: types.FETCH_PRODUCTS_SUCCESS,\n    json\n  }\n}\n\nexport function fetchProductsFailed(errorMsg){\n  return {\n    type: types.FETCH_PRODUCTS_FAILED,\n    errorMsg\n  }\n}\n\nexport function fetchProducts(productId=null) {\n  return function(dispatch) {\n    dispatch(fetchProductsRequest())\n    let endpoint = (productId\n      ? `${BACKEND_API_ENDPOINT}/products/${productId}/`\n      : `${BACKEND_API_ENDPOINT}/products/`\n    )\n    return fetch(endpoint)\n      .then(response => {\n        if(response.status >= 400) {\n          throw new Error(\"Error fetching products. Please try again later.\")\n        }\n        return response.json()\n      })\n      .then(json => dispatch(fetchProductsSuccess((productId ? [json] : json))))\n      .catch(error => dispatch(fetchProductsFailed(error.message)))\n  }\n}","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom';\n\nimport '../../../assets/css/bootstrap.min.css';\nimport '../../../assets/css/style.css';\n\nclass Header extends Component{\n    render() {\n      return (\n        <>\n          <header style={{background: this.props.backgroundColor}}>\n            <div className=\"container\">\n              {/* <button id=\"menu_toggle\">\n                <i className=\"first\" />\n                <i className=\"middle\" />\n                <i className=\"last\" />\n              </button> */}\n              <Link to=\"/\" className=\"brand-name\">\n                <img src={this.props.logo} alt=\"logo\" />\n              </Link>\n              <div className=\"right\">\n                {/* <a href=\"#\" className=\"wishlist_link\" /> */}\n                {/* <a href=\"cart.html\" className=\"cart_link\" /> */}\n              </div>\n            </div>\n          </header>\n        </>\n      )\n    }\n}\n\nHeader.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  logo: PropTypes.string.isRequired\n}\nexport default Header","import React, { Component } from \"react\";\n\nimport '../../../assets/css/bootstrap.min.css'\nimport '../../../assets/css/style.css'\n\nclass Spotlight extends Component{\n  render() {\n    return (\n      <>\n        <div className=\"col\">\n          <div className=\"imgcover\">\n            <img src={this.props.image} alt=\"\" />\n          </div>\n        </div>\n      </>\n    )\n  }\n}\nclass Spotlights extends Component{\n  render() {\n      const { spotlights } = this.props;\n      return (\n        <>\n          <div className=\"banner_slider\">\n            <div className=\"slider_wrap\">\n              {spotlights.map((spotlight, index) => {\n                return <Spotlight key={index} image={spotlight.image}/>\n              })}\n            </div>\n          </div>\n        </>\n      )\n  }\n}\n\nexport default Spotlights","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport '../../../assets/css/bootstrap.min.css';\nimport '../../../assets/css/style.css';\n\n\nexport class Product extends Component {\n  render() {\n    const product = this.props.product;\n    return (\n      <div className=\"product col-xs-6\">\n        <div className=\"img_cover\">\n          <Link to={`/product/${product.slug}/`}>\n            <img src={product.image} alt=\"\" />\n          </Link>\n          {/* <span className=\"add_w_list\" /> */}\n        </div>\n        <div className=\"head\">\n          <Link to={`/product/${product.slug}/`} className=\"title\">\n            <b>{ product.name }</b>\n\t\t\t\t\t\t<span>Full Leng Shirt</span>\n\t\t\t\t\t\t<small className=\"price\" style={{color: this.props.priceColor}}>{/*<del>500</del>*/}Rs { product.price }</small>\n          </Link>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport class ProductList extends Component{\n  render() {\n    const products = Object.values(this.props.products).filter(\n      prod => prod.tag === this.props.selectedTag\n    );\n    return (\n      <div className=\"tab-content\">\n        <div id=\"popular\" className=\"products_list\">\n          <div className=\"container p0\">\n            <div className=\"row\">\n              {products.map((product) => {\n                return <Product key={product.id} product={product} priceColor={this.props.priceColor}/>\n               })}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\n\n\nclass Tag extends Component{\n  render() {\n    const { name, buttonColor, setTag, tag, activeTag } = this.props\n    let tagClassName  = \"col-xs-4 bt\"\n    let buttonBG = {}\n    if (activeTag === tag){\n      tagClassName += \" active\"\n      buttonBG = {background: buttonColor}\n    }\n    return (\n      <li className={tagClassName}>\n        <a className=\"button\" href=\"/\"\n          onClick={e => {\n              e.preventDefault()\n              setTag(tag)\n          }}\n          style={buttonBG}\n        >\n          {name}\n        </a>\n      </li>\n    )\n  }\n}\nTag.propTypes = {\n  name: PropTypes.string.isRequired,\n  buttonColor: PropTypes.string.isRequired,\n  setTag: PropTypes.func.isRequired,\n  tag: PropTypes.string.isRequired\n}\n\n\nexport class TagFilter extends Component{\n  render() {\n    const { tags, buttonColor, activeTag } = this.props\n\n    return(\n      <>\n      <div className=\"tab_toggle products_cat\">\n        <div className=\"container p0\">\n          <div className=\"row\">\n            <ul className=\"buttons\">\n              {tags.map((tag) => {\n                return (\n                  <Tag\n                    key={tag.slug}\n                    name={tag.name}\n                    buttonColor={buttonColor}\n                    setTag={this.props.setTag}\n                    tag={tag.slug}\n                    activeTag={activeTag}\n                  />\n                )\n               })}\n            </ul>\n          </div>\n        </div>\n      </div>\n      </>\n    )\n  }\n}\nTagFilter.propTypes = {\n  setTag: PropTypes.func.isRequired,\n  tags: PropTypes.array.isRequired,\n  buttonColor: PropTypes.string.isRequired\n}\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchStoreDetails, fetchStoreSpotlight } from './duck/operations';\nimport { setTag } from './duck/actions';\nimport { fetchProducts } from '../product/duck/actions';\nimport { Helmet } from \"react-helmet\";\n\nimport Header from './components/Header';\nimport Spotlights from './components/Spotlight'\nimport { ProductList } from './components/HomeProducts'\nimport { TagFilter } from './components/Tags'\n// import { getManifestURL } from '../common/manifest'\n\n\nclass HomeContainer extends Component{\n  componentDidMount() {\n    if(\n      (!this.props.store.isFetching && !this.props.store.data) ||\n      (!this.props.spotlight.isFetching && !this.props.spotlight.images)\n    ){\n      this.props.fetchStoreDetails()\n      this.props.fetchStoreSpotlight()\n      this.props.fetchProducts()\n    }\n    \n  }\n\n  render() {\n    const {\n      store, product, spotlight, selectedTag, setTag\n    } = this.props\n\n    let helmetRender=<></>,\n      headerRender=<></>,\n      tagBarRender=<></>;\n    if(!store.isFetching && store.data){\n      helmetRender = (\n        <Helmet>\n          <title>{store.data.name}</title>\n          <link rel=\"icon\" href={store.data.style.favicon} />\n        </Helmet>\n      )\n      headerRender = (\n        <Header\n          backgroundColor={store.data.style.themeColor}\n          logo={store.data.style.logo}\n        />\n      )\n      tagBarRender = (\n        <TagFilter\n          setTag={setTag}\n          tags={store.data.tags}\n          buttonColor={store.data.style.themeColor}\n          activeTag={selectedTag}\n        />\n      )\n    } else {\n      headerRender = <p>{store.error}</p>\n    }\n\n    let spotlightRender;\n    if(!spotlight.isFetching && spotlight.images){\n      spotlightRender = <Spotlights spotlights={spotlight.images}/>\n    } else {\n      spotlightRender = <p>{ spotlight.error }</p>\n    }\n\n    let productRender;\n    if(!product.isFetching && product.items){\n      productRender = (\n        <ProductList\n          products={product.items}\n          selectedTag={selectedTag}\n          priceColor={store.data.style.themeColor}\n        />\n      )\n    } else {\n      productRender = <p>{ product.error }</p>\n    }\n\n    let showSpinner = !(\n      (!store.isFetching && !store.data) ||\n      (!spotlight.isFetching && !spotlight.images) ||\n      (!product.isFetching && !product.data)\n    )\n    if(showSpinner){\n      return (\n        <p> Loading ... </p>\n      )\n    }else{\n      // if(store.data){\n      //   document.querySelector('#instore-manifest-placeholder').setAttribute(\n      //     'href', getManifestURL(this.props.store.data));\n      //   console.log(getManifestURL(this.props.store.data))\n      // }\n      return (\n        <>\n          {helmetRender}\n          {headerRender}\n\t\t \t    <section id=\"content\">\n            { spotlightRender }\n            { tagBarRender }\n            { productRender }\n          </section>\n        </>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  const { store, spotlight, product, selectedTag } = state;\n  return {\n    store, product, spotlight, selectedTag \n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStoreDetails: () => dispatch(fetchStoreDetails()),\n    fetchStoreSpotlight: () => dispatch(fetchStoreSpotlight()),\n    fetchProducts: () => dispatch(fetchProducts()),\n    setTag: (tag) => dispatch(setTag(tag))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeContainer);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../assets/css/bootstrap.min.css'\nimport '../../assets/css/style.css'\nimport whatsappLogo from '../../assets/images/whatsapp.svg'\n\nclass ProductDetail extends Component{\n    render() {\n      let { product, themeColor } = this.props\n      return (\n        <>\n          <section id=\"content\">\n            <div id=\"spotlight\">\n              <div className=\"inner_banner\">\n                <div className=\"slider_wrap\">\n                  <div className=\"col\">\n                    <div className=\"imgcover\">\n                      <img src={product.image} alt=\"\"/>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"product_details\">\n              <div className=\"container\">\n                <h2>{product.name}</h2>\n                <h6>Angle type double collered article</h6>\n                <div className=\"product_desc\">\n                  <h4>Product features</h4>\n                  <ul>\n                    <li>Collered angle type genuine leathe boots</li>\n                    <li>Specially for bikers</li>\n                    <li>Trecking guys, its designed by English</li>\n                    <li>100% Genuine leather and threads</li>\n                  </ul>\n                </div>\n                <div className=\"cart_section\">\n                  <div className=\"row\">\n                    {/* <div className=\"col-xs-7\"> */}\n                      {/* <form action> */}\n                      {/* \n                        <span className=\"quatity_change\">\n                          <span className=\"minus\">-</span>\n                          <input\n                            id=\"cart_quantity\"\n                            type=\"text\"\n                            defaultValue={1}\n                            className=\"qty\"\n                          />\n                          <span className=\"add\">+</span>\n                        </span>\n                      */}\n                      {/* </form> */}\n                    {/* </div> */}\n                    <div>\n                      <span className=\"price\" style={{color: themeColor}}>Price: Rs {product.price}</span>\n                    </div>\n                  </div>\n                  {/*\n                  <div className=\"buttons row\">\n                    <div className=\"col-xs-4\">\n                      <Link className=\"button2 icon\" to=\"/\">\n                        <span className=\"wishlist_link\" />\n                      </Link>\n                    </div>\n                    {/* <div className=\"col-xs-8\">\n                      <a href className=\"button3\">\n                        Add to Cart\n                      </a>\n                    </div>\n                  </div>\n                  */}\n                </div>\n              </div>\n            </div>\n            <div className=\"details_bottom\">\n\t\t\t\t\t    <Link to=\"/\" className=\"button5\">\n\t\t\t\t \t\t    <img src={whatsappLogo} alt=\"whatsapp\"/>\n\t\t\t\t \t    </Link>\n\t\t\t\t \t    <span className=\"button6\">\n\t\t\t \t\t\t    Available\n\t\t\t \t\t    </span>\n            </div>\n          </section>\n        </>\n      )\n    }\n}\n\nexport default ProductDetail;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStoreDetails } from '../home/duck/operations';\nimport ProductDetail from './ProductDetail'\nimport { fetchProducts } from './duck/actions';\nimport Header from '../home/components/Header'\n\nclass ProductContainer extends Component{\n    componentDidMount() {\n      const { productSlug, productIsFetching, products, fetchProducts, fetchStoreDetails } = this.props\n      if(!productIsFetching && !products){\n        fetchStoreDetails()\n        fetchProducts(productSlug)\n      }\n    }\n\n    render() {\n      const { productSlug, productIsFetching, products, store } = this.props\n      const product = (products ? products[productSlug] : null)\n\n      return (\n        <>\n          {(!productIsFetching && product && store.data)\n            ? (\n              <>\n              <Header\n                backgroundColor={store.data.style.themeColor}\n                logo={store.data.style.logo}\n              />\n              <ProductDetail product={product} themeColor={store.data.style.themeColor}/>\n              </>\n            )\n            : <p>Fetching products ...</p>\n          }\n        </>\n      )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const productSlug = ownProps.match.params.slug;\n  const productIsFetching = state.product.isFetching;\n  const products = state.product.items;\n  const store = state.store;\n  return { productSlug, productIsFetching, products, store }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStoreDetails: () => dispatch(fetchStoreDetails()),\n    fetchProducts: (productId) => dispatch(fetchProducts(productId))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router'\nimport { ConnectedRouter } from 'connected-react-router'\nimport ScrollMemory from 'react-router-scroll-memory';\n\n// import requireAuth from './common/requireAuth';\nimport HomeContainer from './home/HomeContainer';\nimport ProductContainer from './product/ProductContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <ConnectedRouter history={this.props.history}>\n          <ScrollMemory/>\n          <Switch>\n            <Route exact path='/' component={HomeContainer} />\n            {/* <Route path='/product/:productSlug/' component={requireAuth(ProductContainer)}/> */}\n            <Route path='/product/:slug/' component={ProductContainer}/>\n          </Switch>\n        </ConnectedRouter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","const initialState = {\n  isAuthenticated: false\n}\n\nexport const auth = (state=initialState, action) => {\n  switch (action.type) {\n    default:\n        return state\n  }\n}\n\n","import types from './types';\n\n\nconst storeInitialState = {\n  isFetching: false,\n  data: undefined,\n  error: undefined\n}\n\nexport const store = (state=storeInitialState, action) => {\n\n  switch (action.type) {\n\n    case types.FETCH_STORE_DETAIL_REQUEST:\n      return Object.assign({}, state, {\n          isFetching: true,\n      })\n\n    case types.FETCH_STORE_DETAIL_SUCCESS:\n      let json = action.json\n      return Object.assign({}, state, {\n          isFetching: false,\n          data: {\n            \"name\": json.name,\n            \"email\": json.email,\n            \"style\": {\n              \"favicon\": json.style.favicon,\n              \"logo\": json.style.logo,\n              \"themeColor\": json.style.theme_color,\n              \"accentColor\": json.style.accent_color\n            },\n            \"tags\": json.tags\n          }\n      })\n\n      case types.FETCH_STORE_DETAIL_FAILED:\n        return Object.assign({}, state, {\n          isFetching: false,\n          error: action.errorMsg\n        })\n\n    default:\n      return state\n  }\n}\n\n\nconst spotlightInitialState = {\n  isFetching: false,\n  images: undefined,\n  error: undefined\n}\nexport const spotlight = (state=spotlightInitialState, action) => {\n\n  switch (action.type) {\n\n    case types.FETCH_STORE_SPOTLIGHT_REQUEST:\n      return Object.assign({}, state, {\n          isFetching: true,\n      })\n\n    case types.FETCH_STORE_SPOTLIGHT_SUCCESS:\n      return Object.assign({}, state, {\n          isFetching: false,\n          images: action.json\n        })\n\n      case types.FETCH_STORE_DETAIL_FAILED:\n        return Object.assign({}, state, {\n          isFetching: false,\n          error: action.errorMsg\n        })\n\n    default:\n      return state\n  }\n}\n\nexport const selectedTag = (state = \"popular\", action) => {\n  if(action.tag){\n    return action.tag\n  }\n  return state\n}\n","import types from './types';\n\n\nconst initialState = {\n  isFetching: false,\n}\n\nexport const product = (state = initialState, action) => {\n    switch (action.type) {\n\n      case types.FETCH_PRODUCTS_REQUEST:\n        return Object.assign({}, state, {\n          isFetching: true,\n        })\n\n      case types.FETCH_PRODUCTS_SUCCESS:\n        const newProducts = action.json.reduce(function(result, item) {\n          result[item.slug] = item;\n          return result;\n        }, {})\n        const newItems = (\n          state.items\n          ? Object.assign({}, state.items, newProducts)\n          : newProducts\n        )\n        return Object.assign({}, state, {\n          isFetching: false,\n          items: newItems\n        })\n\n      case types.FETCH_PRODUCTS_FAILED:\n        return Object.assign({}, state, {\n          isFetching: false,\n          error: action.errorMsg\n        })\n\n      default:\n        return state\n    }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createBrowserHistory } from 'history'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport App from './app/App';\n\nimport { combineReducers } from 'redux'\nimport { auth } from './app/common/reducers/auth'\nimport { store as storeData, selectedTag, spotlight } from './app/home/duck/reducers'\nimport { product } from './app/product/duck/reducers'\nimport { connectRouter } from 'connected-react-router'\n\n\nconst history = createBrowserHistory()\n\nconst rootReducer = combineReducers(\n  {auth, product, selectedTag, spotlight, store: storeData, router: connectRouter(history)}\n)\n\nlet middleware = [thunkMiddleware, routerMiddleware(history)]\nif (process.env.NODE_ENV !== 'production') {\n  let loggerMiddleware = createLogger()\n  middleware = [...middleware, loggerMiddleware]\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middleware))\n\nrender(\n  <Provider store={store}>\n    <App history={history}/>\n  </Provider>,\n  document.getElementById('root')\n)\n\n\nserviceWorker.register()"],"sourceRoot":""}